name: "All post-commit tests"

on:
  workflow_call:
    inputs:
      build-type:
        required: false
        default: Release
        type: string
      version:
          required: false
          default: "22.04"
          type: string
  workflow_dispatch:
    inputs:
      build-type:
        required: false
        default: Release
        type: choice
        options:
          - Release
          - Debug
          - RelWithDebInfo
          - ASan
          - TSan
      version:
        required: false
        default: "22.04"
        type: choice
        options:
          - "22.04"
          - "24.04"
      with-retries:
        default: false
        type: boolean
        description: "Re-run failed jobs (max 3)"
  push:
    branches: ["main"]

permissions:
  actions: read
  contents: write
  pull-requests: write
  pages: write
  id-token: write
  packages: write
  checks: write

run-name: All post-commit tests${{ (github.event_name == 'workflow_dispatch' && inputs.with-retries) && ' (with retries)' || ''}}
jobs:
  build-artifact:
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    secrets: inherit
    with:
      build-type: ${{ inputs.build-type || 'Release' }}
      build-wheel: true
      version: ${{ inputs.version || '22.04' }}
      skip-tt-train: false
  build-artifact-profiler:
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    secrets: inherit
    with:
      build-type: ${{ inputs.build-type || 'Release' }}
      build-wheel: true
      tracy: true
      version: ${{ inputs.version || '22.04' }}

  # Single wheel selection job that handles both artifacts
  select-wheels:
    runs-on: ubuntu-latest
    needs: [build-artifact, build-artifact-profiler]
    outputs:
      wheel-artifact-name: ${{ steps.select-wheels.outputs.wheel-artifact-name }}
      wheel-artifact-name-profiler: ${{ steps.select-wheels.outputs.wheel-artifact-name-profiler }}
    steps:
      - name: Select appropriate wheels based on version
        id: select-wheels
        run: |
          VERSION="${{ inputs.version || '22.04' }}"

          if [[ "$VERSION" == "22.04" ]]; then
            WHEEL_NAME="${{ needs.build-artifact.outputs.wheel-artifact-name-310 }}"
            PROFILER_WHEEL_NAME="${{ needs.build-artifact-profiler.outputs.wheel-artifact-name-310 }}"
            echo "wheel-artifact-name=$WHEEL_NAME" >> $GITHUB_OUTPUT
            echo "wheel-artifact-name-profiler=$PROFILER_WHEEL_NAME" >> $GITHUB_OUTPUT
            echo "Using Python 3.10 wheels for Ubuntu 22.04"
            echo "Wheel artifact name set: $WHEEL_NAME"
            echo "Profiler wheel artifact name set: $PROFILER_WHEEL_NAME"
          elif [[ "$VERSION" == "24.04" ]]; then
            WHEEL_NAME="${{ needs.build-artifact.outputs.wheel-artifact-name-312 }}"
            PROFILER_WHEEL_NAME="${{ needs.build-artifact-profiler.outputs.wheel-artifact-name-312 }}"
            echo "wheel-artifact-name=$WHEEL_NAME" >> $GITHUB_OUTPUT
            echo "wheel-artifact-name-profiler=$PROFILER_WHEEL_NAME" >> $GITHUB_OUTPUT
            echo "Using Python 3.12 wheels for Ubuntu 24.04"
            echo "Wheel artifact name set: $WHEEL_NAME"
            echo "Profiler wheel artifact name set: $PROFILER_WHEEL_NAME"
          else
            WHEEL_NAME="${{ needs.build-artifact.outputs.wheel-artifact-name-312 }}"
            PROFILER_WHEEL_NAME="${{ needs.build-artifact-profiler.outputs.wheel-artifact-name-312 }}"
            echo "wheel-artifact-name=$WHEEL_NAME" >> $GITHUB_OUTPUT
            echo "wheel-artifact-name-profiler=$PROFILER_WHEEL_NAME" >> $GITHUB_OUTPUT
            echo "Using Python 3.12 wheels as default for version: $VERSION"
            echo "Wheel artifact name set: $WHEEL_NAME"
            echo "Profiler wheel artifact name set: $PROFILER_WHEEL_NAME"
          fi

  # Slow Dispatch Unit Tests
  sd-unit-tests:
    needs: [build-artifact, select-wheels]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/build-and-unit-tests.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
  # Fast Dispatch Unit Tests
  fast-dispatch-unit-tests:
    needs: [build-artifact, select-wheels]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/fast-dispatch-build-and-unit-tests.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
  # Fabric Unit Tests
  fabric-unit-tests:
    needs: [build-artifact, select-wheels]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/fabric-build-and-unit-tests.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
  # TTNN FD Unit tests
  ttnn-unit-tests:
    needs: [build-artifact, select-wheels]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/ttnn-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
      version: ${{ inputs.version || '22.04' }}
  # FD Model Tests
  models-unit-tests:
    needs: [build-artifact, select-wheels]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/models-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
  # FD C++ Unit Tests
  cpp-unit-tests:
    needs: [build-artifact, select-wheels]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/cpp-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
  tt-train-cpp-unit-tests:
    needs: build-artifact
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/tt-train-post-commit.yaml
    with:
      arch: ${{ matrix.test-group.arch }}
      runner-label: ${{ matrix.test-group.runner-label }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
  run-profiler-regression:
    needs: [build-artifact-profiler, select-wheels]
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { arch: wormhole_b0, runner-label: N150 },
          { arch: wormhole_b0, runner-label: N300 },
        ]
    uses: ./.github/workflows/run-profiler-regression.yaml
    secrets: inherit
    with:
      arch: ${{ matrix.test-group.arch}}
      runner-label: ${{ matrix.test-group.runner-label}}
      docker-image: ${{ needs.build-artifact-profiler.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact-profiler.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name-profiler }}
  t3000-fast-tests:
    if: ${{ github.event.pull_request.head.repo.fork == false }}
    needs: [build-artifact, select-wheels]
    secrets: inherit
    uses: ./.github/workflows/t3000-fast-tests-impl.yaml
    with:
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
  build-docs:
    needs: [build-artifact, select-wheels]
    uses: ./.github/workflows/docs-latest-public.yaml
    secrets: inherit
    with:
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.select-wheels.outputs.wheel-artifact-name }}
  build:
    uses: ./.github/workflows/build-artifact.yaml
    permissions:
      packages: write
    needs: build-artifact
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        config:
          - version: "22.04"
            toolchain: "cmake/x86_64-linux-clang-17-libstdcpp-toolchain.cmake"
            build-type: "Debug"
            publish-artifact: false
            skip-tt-train: false
          - version: "22.04"
            toolchain: "cmake/x86_64-linux-clang-17-libcpp-toolchain.cmake"
            build-type: "Release"
            publish-artifact: false
            skip-tt-train: true
          - version: "22.04"
            toolchain: "cmake/x86_64-linux-gcc-12-toolchain.cmake"
            build-type: "Release"
            publish-artifact: false
            skip-tt-train: true
          #- version: "22.04"
          #  toolchain: "cmake/x86_64-linux-gcc-12-toolchain.cmake"
          #  build-type: "Debug"
          #  publish-artifact: false
          #  skip-tt-train: true
          - version: "24.04"
            toolchain: "cmake/x86_64-linux-clang-17-libstdcpp-toolchain.cmake"
            build-type: "Release"
            publish-artifact: false
            skip-tt-train: false
          - version: "24.04"
            toolchain: "cmake/x86_64-linux-gcc-14-toolchain.cmake"
            build-type: "Release"
            publish-artifact: false
            skip-tt-train: true # TODO: look into TT-Train with GCC 14
    with:
      version: ${{ matrix.config.version }}
      toolchain: ${{ matrix.config.toolchain }}
      build-type: ${{ matrix.config.build-type }}
      publish-artifact: ${{ matrix.config.publish-artifact }}
      skip-tt-train: ${{ matrix.config.skip-tt-train || false }}
  # We used to use this for post-commit, but we didn't have enough runners
  # to support the number of developers running this workflow
  # build-and-test-measure-perf:
  # build-and-test-measure-perf-device:
